name: makos_timer
description: "The most ergonomic timer. (set and initiate a timer with a single sweep)"
# The following line prevents the package from being accidentally published to
# pub.dev using `flutter pub publish`. This is preferred for private packages.
publish_to: 'none' # Remove this line if you wish to publish to pub.dev
license: 'CCNC'

# The following defines the version and build number for your application.
# A version number is three numbers separated by dots, like 1.2.43
# followed by an optional build number separated by a +.
# Both the version and the builder number may be overridden in flutter
# build by specifying --build-name and --build-number, respectively.
# In Android, build-name is used as versionName while build-number used as versionCode.
# Read more about Android versioning at https://developer.android.com/studio/publish/versioning
# In iOS, build-name is used as CFBundleShortVersionString while build-number is used as CFBundleVersion.
# Read more about iOS versioning at
# https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/CoreFoundationKeys.html
# In Windows, build-name is used as the major, minor, and patch parts
# of the product and file versions while build-number is used as the build suffix.
version: 1.0.0+1

environment:
  sdk: ^3.6.2

# Dependencies specify other packages that your package needs in order to work.
# To automatically upgrade your package dependencies to the latest versions
# consider running `flutter pub upgrade --major-versions`. Alternatively,
# dependencies can be manually updated by changing the version numbers below to
# the latest version available on pub.dev. To see which dependencies have newer
# versions available, run `flutter pub outdated`.
dependencies:
  flutter:
    sdk: flutter
  signals: ^6.0.2
  # animated_list_plus: ^0.5.2
  flutter_animate: ^4.5.2
  hsluv: ^1.1.3
  # The following adds the Cupertino Icons font to your application.
  # Use with the CupertinoIcons class for iOS style icons.
  cupertino_icons: ^1.0.8
  workmanager: ^0.5.2
  # there's a bug https://github.com/bluefireteam/audioplayers/issues/1749 on linux, random delay when starting playback for the second time, maintainers say they'll get to it.
  # audioplayers: ^6.5.0
  # so I tried this instead of the above audioplayers, but couldn't get it to run, apparently it was failing to find the plugin .so it was generating during build. No idea why. It's right there. It has all of its dependencies. (alsa)
  # flutter_soloud: ^3.2.2
  provider: ^6.1.4
  nb_utils: ^7.1.4
  animated_to: ^0.3.2
  animated_containers: ^1.2.0
  # animated_containers:
  #   path: /home/mako/programming/animated_containers
  # I was considering using this without a remote sync provider (ie, no supabase or rest or graphql), but the maintain suggested not using it at all in that case. Which seemed dumb as hell to me since brick has a bunch of other functionality that's good for persisting values to memory and sqlite but okay.
  # brick_offline_first_with_supabase: ^2.1.0
  
  uuid: ^4.5.1
  
  drift: ^2.28.1
  drift_flutter: ^0.2.5
  path_provider: ^2.1.5
  # path_provider_ffi: ^2.1.5-dev2



dev_dependencies:
  flutter_test:
    sdk: flutter
  # The "flutter_lints" package below contains a set of recommended lints to
  # encourage good coding practices. The lint set provided by the package is
  # activated in the `analysis_options.yaml` file located at the root of your
  # package. See that file for information about deactivating specific lint
  # rules and activating additional ones.
  # brick_offline_first_with_supabase_build: ^2.0.0
  flutter_lints: ^5.0.0
  build_runner: ^2.7.0
  drift_dev: ^2.28.1

# For information on the generic Dart part of this file, see the
# following page: https://dart.dev/tools/pub/pubspec

# The following section is specific to Flutter packages.
flutter:

  # The following line ensures that the Material Icons font is
  # included with your application, so that you can use the icons in
  # the material Icons class.
  uses-material-design: true

  # To add assets to your application, add an assets section, like this:
  assets:
    # CC0: https://freesound.org/people/TEDAgame/sounds/448552/
    - assets/sounds/jarring piano sound 448552__tedagame__g4.ogg
    - assets/sounds/jingles_STEEL15_kenney.ogg
    - assets/sounds/forceField_002_kenney.ogg

  # An image asset can refer to one or more resolution-specific "variants", see
  # https://flutter.dev/to/resolution-aware-images

  # For details regarding adding assets from package dependencies, see
  # https://flutter.dev/to/asset-from-package

  # To add custom fonts to your application, add a fonts section here,
  # in this "flutter" section. Each entry in this list should have a
  # "family" key with the font family name, and a "fonts" key with a
  # list giving the asset and other descriptors for the font. For
  # example:
  # fonts:
  #   - family: Schyler
  #     fonts:
  #       - asset: fonts/Schyler-Regular.ttf
  #       - asset: fonts/Schyler-Italic.ttf
  #         style: italic
  #   - family: Trajan Pro
  #     fonts:
  #       - asset: fonts/TrajanPro.ttf
  #       - asset: fonts/TrajanPro_Bold.ttf
  #         weight: 700
  #
  # For details regarding fonts from package dependencies,
  # see https://flutter.dev/to/font-from-package
